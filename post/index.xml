<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Day Day Up</title><link>https://hh02.github.io/post/</link><description>Recent content in Posts on Day Day Up</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 20 Aug 2023 22:17:15 +0800</lastBuildDate><atom:link href="https://hh02.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>[Learning DDD] 02 Discovering Domain Knowledge</title><link>https://hh02.github.io/p/learning-ddd-02-discovering-domain-knowledge/</link><pubDate>Sun, 20 Aug 2023 22:17:15 +0800</pubDate><guid>https://hh02.github.io/p/learning-ddd-02-discovering-domain-knowledge/</guid><description>Chapter 01: business subdomains&amp;rsquo; boundaries and types. This chapter continues the topic of business domain analysis but in a different dimension: depth. It focuses on what happens inside a subdomain: its business function and logic. Business Problems Business problems appear both at the business domain and subdomain levels. Knowledge Discovery To be effective, the software has to mimic the domain experts&amp;rsquo; way of thinking about the prob</description></item><item><title>[Learning DDD] 01 Analyzing Business Domains</title><link>https://hh02.github.io/p/learning-ddd-01-analyzing-business-domains/</link><pubDate>Sun, 20 Aug 2023 17:22:21 +0800</pubDate><guid>https://hh02.github.io/p/learning-ddd-01-analyzing-business-domains/</guid><description>What Is a Business Domain? A business domain defines a company&amp;rsquo;s main area of activity. Generally speaking, it&amp;rsquo;s the service the company provides to its clients.
For example:
FedEx provides courier delivery. Starbucks is best known for its coffee. Walmart is one of the most widely recognized retail establishments. What is a Subdomain? To achieve its business domain&amp;rsquo;s goals and targets, a company has to operate in multiple subdomains.
A subdomain is a fine-grained area of business activity.</description></item><item><title>LeetCode 703. Kth Largest Element in a Stream</title><link>https://hh02.github.io/p/leetcode-703.-kth-largest-element-in-a-stream/</link><pubDate>Mon, 22 Nov 2021 23:16:25 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-703.-kth-largest-element-in-a-stream/</guid><description>题目 Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element. Implement KthLargest class: KthLargest(int k, int[] nums) Initializes the object with the integer k and the stream of integers nums. int add(int val) Appends the integer val to the stream and returns the element representing the kth largest element</description></item><item><title>LeetCode 430. Flatten a Multilevel Doubly Linked List</title><link>https://hh02.github.io/p/leetcode-430.-flatten-a-multilevel-doubly-linked-list/</link><pubDate>Mon, 22 Nov 2021 22:50:39 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-430.-flatten-a-multilevel-doubly-linked-list/</guid><description>题目 You are given a doubly linked list, which contains nodes that have a next pointer, a previous pointer, and an additional child pointer. This child pointer may or may not point to a separate doubly linked list, also containing these special nodes. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure as shown in the example</description></item><item><title>LeetCode 139. Word Break</title><link>https://hh02.github.io/p/leetcode-139.-word-break/</link><pubDate>Mon, 22 Nov 2021 22:23:26 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-139.-word-break/</guid><description>题目 Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words. Note that the same word in the dictionary may be reused multiple times in the segmentation. Example 1: Input: s = &amp;#34;leetcode&amp;#34;, wordDict = [&amp;#34;leet&amp;#34;,&amp;#34;code&amp;#34;] Output: true Explanation: Return true because &amp;#34;leetcode&amp;#34; can be segmented as &amp;#34;leet code&amp;#34;. 思路 动</description></item><item><title>LeetCode 15. 3Sum</title><link>https://hh02.github.io/p/leetcode-15.-3sum/</link><pubDate>Mon, 15 Nov 2021 23:56:08 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-15.-3sum/</guid><description>题目 Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0. Notice that the solution set must not contain duplicate triplets. 思路 与 2sum 类似，先对数组进行排序，枚举前两个数，第三个</description></item><item><title>LeetCode 135. Candy</title><link>https://hh02.github.io/p/leetcode-135.-candy/</link><pubDate>Mon, 08 Nov 2021 21:37:29 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-135.-candy/</guid><description>题目 There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings. You are giving candies to these children subjected to the following requirements: Each child must have at least one candy. Children with a higher rating get more candies than their neighbors. Return the minimum number of candies you need to have to distribute the candies to the</description></item><item><title>LeetCode 162. Find Peak Element</title><link>https://hh02.github.io/p/leetcode-162.-find-peak-element/</link><pubDate>Sat, 06 Nov 2021 16:25:03 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-162.-find-peak-element/</guid><description>题目 A peak element is an element that is strictly greater than its neighbors. Given an integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks. You may imagine that nums[-1] = nums[n] = -∞. You must write an algorithm that runs in O(log n) time. Example 1: Input: nums = [1,2,3,1]</description></item><item><title>LeetCode 1021. Remove Outermost Parentheses</title><link>https://hh02.github.io/p/leetcode-1021.-remove-outermost-parentheses/</link><pubDate>Thu, 04 Nov 2021 12:31:52 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-1021.-remove-outermost-parentheses/</guid><description>题目 A valid parentheses string is either empty &amp;ldquo;&amp;rdquo;, &amp;ldquo;(&amp;rdquo; + A + &amp;ldquo;)&amp;rdquo;, or A + B, where A and B are valid parentheses strings, and + represents string concatenation. For example, &amp;ldquo;&amp;rdquo;, &amp;ldquo;()&amp;rdquo;, &amp;ldquo;(())()&amp;rdquo;, and &amp;ldquo;(()(()))&amp;rdquo; are all valid parentheses strings. A valid parentheses string s is primitive if it is nonempty, and there does not exist a way to split it into s = A +</description></item><item><title>LeetCode 5. Longest Palindromic Substring</title><link>https://hh02.github.io/p/leetcode-5.-longest-palindromic-substring/</link><pubDate>Thu, 28 Oct 2021 19:54:02 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-5.-longest-palindromic-substring/</guid><description>题目 Given a string s, return the longest palindromic substring in s. Example 1: Input: s = &amp;#34;babad&amp;#34; Output: &amp;#34;bab&amp;#34; Note: &amp;#34;aba&amp;#34; is also a valid answer. 思路 方法一：动态规划 f[i][j] = true 表示 i~j 的字串为回文串，否则不是； 转移：f[i][j] = (s[i] ==</description></item><item><title>LeetCode 32. Longest Valid Parentheses</title><link>https://hh02.github.io/p/leetcode-32.-longest-valid-parentheses/</link><pubDate>Wed, 27 Oct 2021 22:57:22 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-32.-longest-valid-parentheses/</guid><description>题目 Given a string containing just the characters &amp;lsquo;(&amp;rsquo; and &amp;lsquo;)&amp;rsquo;, find the length of the longest valid (well-formed) parentheses substring. Example: Input: s = &amp;#34;)()())&amp;#34; Output: 4 Explanation: The longest valid parentheses substring is &amp;#34;()()&amp;#34;. 思路 对于遇到的每个 ( ，我们将它的下标放入栈中 对于遇到的每个 ) ，我们</description></item><item><title>LeetCode 28. Implement strStr()</title><link>https://hh02.github.io/p/leetcode-28.-implement-strstr/</link><pubDate>Tue, 26 Oct 2021 17:05:34 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-28.-implement-strstr/</guid><description>题目 Implement strStr(). Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack. Clarification: What should we return when needle is an empty string? This is a great question to ask during an interview. For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C&amp;rsquo;s strstr() and Java&amp;rsquo;s indexOf().</description></item><item><title>LeetCode 240. Search a 2D Matrix II</title><link>https://hh02.github.io/p/leetcode-240.-search-a-2d-matrix-ii/</link><pubDate>Tue, 26 Oct 2021 16:41:50 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-240.-search-a-2d-matrix-ii/</guid><description>题目 Write an efficient algorithm that searches for a target value in an m x n integer matrix. The matrix has the following properties: Integers in each row are sorted in ascending from left to right. Integers in each column are sorted in ascending from top to bottom. Example 1: 20211026164226 Input: matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5 Output: true 思路 由题目可知，矩</description></item><item><title>LeetCode 75. Sort Colors</title><link>https://hh02.github.io/p/leetcode-75.-sort-colors/</link><pubDate>Mon, 25 Oct 2021 17:14:15 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-75.-sort-colors/</guid><description>题目 Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively. You must solve this problem without using the library&amp;rsquo;s sort function. Example 1: Input: nums =</description></item><item><title>LeetCode 74. Search a 2D Matrix</title><link>https://hh02.github.io/p/leetcode-74.-search-a-2d-matrix/</link><pubDate>Mon, 25 Oct 2021 17:00:43 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-74.-search-a-2d-matrix/</guid><description>题目 Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties: Integers in each row are sorted from left to right. The first integer of each row is greater than the last integer of the previous row. Example 1: 20211025170139 Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3 Output: true 思路 思路一：先对第</description></item><item><title>LeetCode 33. Search in Rotated Sorted Array</title><link>https://hh02.github.io/p/leetcode-33.-search-in-rotated-sorted-array/</link><pubDate>Mon, 25 Oct 2021 16:47:56 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-33.-search-in-rotated-sorted-array/</guid><description>题目 There is an integer array nums sorted in ascending order (with distinct values). Prior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 &amp;lt;= k &amp;lt; nums.length) such that the resulting array is [nums[k], nums[k+1], &amp;hellip;, nums[n-1], nums[0], nums[1], &amp;hellip;, nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2]. Given the array nums after</description></item><item><title>LeetCode Weekly Contest 264</title><link>https://hh02.github.io/p/leetcode-weekly-contest-264/</link><pubDate>Mon, 25 Oct 2021 15:22:51 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-weekly-contest-264/</guid><description>2048. Next Greater Numerically Balanced Number 题目 An integer x is numerically balanced if for every digit d in the number x, there are exactly d occurrences of that digit in x. Given an integer n, return the smallest numerically balanced number strictly greater than n. Example 1: Input: n = 1 Output: 22 Explanation: 22 is numerically balanced since: - The digit 2 occurs 2 times. It is</description></item><item><title>LeetCode 945. Minimum Increment to Make Array Unique</title><link>https://hh02.github.io/p/leetcode-945.-minimum-increment-to-make-array-unique/</link><pubDate>Mon, 25 Oct 2021 15:13:52 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-945.-minimum-increment-to-make-array-unique/</guid><description>题目 You are given an integer array nums. In one move, you can pick an index i where 0 &amp;lt;= i &amp;lt; nums.length and increment nums[i] by 1. Return the minimum number of moves to make every value in nums unique. Example 1: Input: nums = [1,2,2] Output: 1 Explanation: After 1 move, the array could be [1, 2, 3]. 思路 遍历 nums 数组，遇</description></item><item><title>LeetCode 206. Reverse Linked List</title><link>https://hh02.github.io/p/leetcode-206.-reverse-linked-list/</link><pubDate>Sat, 23 Oct 2021 23:21:59 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-206.-reverse-linked-list/</guid><description>题目 Given the head of a singly linked list, reverse the list, and return the reversed list. Example 1: 20211023233452 Input: head = [1,2,3,4,5] Output: [5,4,3,2,1] 思路 有迭代和递归两种写法。 代码 迭代 class Solution { public: ListNode* reverseList(ListNode* head) { if (head == nullptr) return nullptr; ListNode* p1 = nullptr; ListNode* p2 = head; ListNode* p3; while(p2) {</description></item><item><title>LeetCode 378. Kth Smallest Element in a Sorted Matrix</title><link>https://hh02.github.io/p/leetcode-378.-kth-smallest-element-in-a-sorted-matrix/</link><pubDate>Fri, 22 Oct 2021 23:03:34 +0800</pubDate><guid>https://hh02.github.io/p/leetcode-378.-kth-smallest-element-in-a-sorted-matrix/</guid><description>题目 Given an n x n matrix where each of the rows and columns are sorted in ascending order, return the kth smallest element in the matrix. Note that it is the kth smallest element in the sorted order, not the kth distinct element. 思路 二分查找。查找比 mid 小的有多少个。因为矩阵是有序</description></item><item><title>LeetCode刷题20211011</title><link>https://hh02.github.io/p/leetcode%E5%88%B7%E9%A2%9820211011/</link><pubDate>Mon, 11 Oct 2021 19:30:44 +0800</pubDate><guid>https://hh02.github.io/p/leetcode%E5%88%B7%E9%A2%9820211011/</guid><description>38.外观数列 class Solution { public: string countAndSay(int n) { if (n == 1) { return &amp;#34;1&amp;#34;; } string t1 = &amp;#34;1&amp;#34;; string t2 = &amp;#34;&amp;#34;; for (int i = 2; i &amp;lt;= n; i++) { int j = 0; int len = t1.size(); while (j &amp;lt; len) { int cnt = 1; while (j + 1 &amp;lt; len &amp;amp;&amp;amp; t1[j] == t1[j+1]) { j++;</description></item><item><title>LeetCode刷题2021 10 10</title><link>https://hh02.github.io/p/leetcode%E5%88%B7%E9%A2%982021-10-10/</link><pubDate>Sun, 10 Oct 2021 22:54:10 +0800</pubDate><guid>https://hh02.github.io/p/leetcode%E5%88%B7%E9%A2%982021-10-10/</guid><description>29 两数相除 要求不使用乘法、除法和 mod 运算符。 class Solution { public: int divide(int dividend, int divisor) { if (dividend == 0) return 0; if (divisor == 1) return dividend; if (divisor == -1) { if (dividend &amp;gt; INT_MIN) return -dividend; return INT_MAX; } long long a = dividend; long long b = divisor; int sign =</description></item><item><title>LeetCode刷题2021 10 8</title><link>https://hh02.github.io/p/leetcode%E5%88%B7%E9%A2%982021-10-8/</link><pubDate>Fri, 08 Oct 2021 23:21:36 +0800</pubDate><guid>https://hh02.github.io/p/leetcode%E5%88%B7%E9%A2%982021-10-8/</guid><description>题目 题目难度 提交次数 #14 最长公共前缀 简单 1 次 #13 罗马数字转整数 简单 3 次 #12 整数转罗马数字 中等 2 次 #11 盛最多水的容器 中等 1 次 #9 回文数 简单 1 次 #8 字符串转</description></item></channel></rss>